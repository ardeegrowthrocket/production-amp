<?php

class Homebase_Autopart_Block_Category_Ymmlisting extends Homebase_Autopart_Block_Category_Partname
{

    /** @var Homebase_Autopart_Helper_Parser  $_helper */
    protected $_helper;
    /** @var Homebase_Autopart_Helper_Data $_dataHelper */
    protected $_dataHelper;

    protected $_defaultToolbarBlock = 'hautopart/display_list_toolbar';

    protected $_productCollection;

    public function _construct(){
        parent::_construct();
        $this->_helper = Mage::helper('hautopart/parser');
        $this->_dataHelper = Mage::helper('hautopart');
    }

    public function getLoadedProductCollection()
    {
        return $this->getProductCollection();
    }

    protected function _beforeToHtml()
    {
        $toolbar = $this->getToolbarBlock();

        $collection = $this->getLoadedProductCollection();

        // use sortable parameters
        if ($orders = $this->getAvailableOrders()) {
            $toolbar->setAvailableOrders($orders);
        }
        if ($sort = $this->getSortBy()) {
            $toolbar->setDefaultOrder($sort);
        }
        if ($dir = $this->getDefaultDirection()) {
            $toolbar->setDefaultDirection($dir);
        }
        if ($modes = $this->getModes()) {
            $toolbar->setModes($modes);
        }

        $toolbar->setCollection($collection);


        $this->setChild('toolbar',$toolbar);

        return parent::_beforeToHtml(); // TODO: Change the autogenerated stub
    }

    public function getToolbarHtml()
    {
        return $this->getChildHtml('toolbar');
    }

    public function getToolbarBlock()
    {
        if ($blockName = $this->getToolbarBlockName()) {
            if ($block = $this->getLayout()->getBlock($blockName)) {
                return $block;
            }
        }
        $block = $this->getLayout()->createBlock($this->_defaultToolbarBlock, microtime());
        return $block;
    }

    public function getMode()
    {
        return $this->getChild('toolbar')->getCurrentMode();
    }

    public function getLayer()
    {
        $layer = Mage::registry('current_layer');
        if ($layer) {
            return $layer;
        }
        return Mage::getSingleton('catalog/layer');
    }

    public function prepareSortableFieldsByCategory($category) {
        if (!$this->getAvailableOrders()) {
            $this->setAvailableOrders($category->getAvailableSortByOptions());
        }
        $availableOrders = $this->getAvailableOrders();
        if (!$this->getSortBy()) {
            if ($categorySortBy = $category->getDefaultSortBy()) {
                if (!$availableOrders) {
                    $availableOrders = $this->_getConfig()->getAttributeUsedForSortByArray();
                }
                if (isset($availableOrders[$categorySortBy])) {
                    $this->setSortBy($categorySortBy);
                }
            }
        }

        return $this;
    }

}