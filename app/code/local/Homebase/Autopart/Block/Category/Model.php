<?php
/**
 * Created by PhpStorm.
 * User: ocastro
 * Date: 4/2/17
 * Time: 10:47 PM
 */

class Homebase_Autopart_Block_Category_Model extends Mage_Core_Block_Template implements Homebase_Autopart_Block_Category_CategoryInterface{
    /** @var  Homebase_Autopart_Helper_Parser $_helper */
    protected $_helper;

    protected $_collection;

    public function _construct(){
        parent::_construct();
        $this->_helper = Mage::helper('hautopart/parser');
    }
    protected function _prepareLayout(){
        $breadcrumbs = $this->getLayout()->getBlock('breadcrumbs');
        $params = unserialize($this->getRequest()->getParam('ymm_params'));
        $size = count($params);
        $labelArray = array();
        $name = "";
        $ctr = 0;
        if($breadcrumbs){
            $breadcrumbs->addCrumb('home', array(
                'label' => $this->__('Home'),
                'title' => $this->__('Go to Home Page'),
                'link'  => Mage::getBaseUrl()
            ));

            foreach($params as $ndx=> $value){
                $ctr++;

                $label = $this->_helper->getLabel($value);
                if($ndx == 'model') {
                    $name = $this->_helper->getLabel($value,'name');
                }else {
                    $name = $label;
                }

                $labelArray[$ndx] = $name;
                if($ctr == $size) {
                    $label = implode(' ',$labelArray);
                }

                $breadcrumbs->addCrumb('ymm-' . $ndx, array(
                    'label' => ucwords($label),
                    'title' => $name,
                    'link'  => (($ctr < $size) ? $this->_helper->getLink($name,$ndx) : '')
                ));
            }
        }

        $this->getList();
        $this->_setCustomMetaContent();

        return parent::_prepareLayout(); // TODO: Change the autogenerated stub
    }

    public function getList()
    {

        if(!$this->_collection)
        {
            // TODO: Implement getList() method.
            $params = unserialize($this->getRequest()->getParam('ymm_params'));
            if(empty($params)){
                return;
            }
            /** @var Homebase_Autopart_Model_Resource_Combination_Collection $collection */
            $collection = Mage::getModel('hautopart/combination')->getCollection();
            $collection->join(array('year' => 'hautopart/combination_label'),'year=year.option');
            $collection->getSelect()->group('year');
            $collection->addOrder('label','DESC');
            foreach($params as $ndx => $value){
                $collection->addFieldToFilter($ndx, $value);
            }

            $yearArray = $collection->getColumnValues('label');
            if(!empty($yearArray)){
                Mage::register('meta_year_data',$yearArray, true);
            }

            $this->_collection = $collection;
        }

        return $this->_collection;
    }

    protected function _setCustomMetaContent()
    {
        $data = array();
        $counter = 1;
        $collection = $this->_collection;
        if($this->_collection) {
            foreach ($collection as $item){

                if($counter <= 3) {
                    $data[] = $item->getLabel();
                    $counter++;
                }else{
                    break;
                }
            }
        }
        Mage::register('model_meta_data', $data);
    }

    public function getAutoName()
    {
        // TODO: Implement getAutoName() method.
        $params = unserialize($this->getRequest()->getParam('ymm_params'));
        $ymm = array();
        foreach($params as $param){
            $ymm[] = $this->_helper->getLabel($param,'name');
        }
        return implode(' ', $ymm);
    }
    public function getCustomLink($year){
        return $this->_helper->getLink($year,'year');
    }
}