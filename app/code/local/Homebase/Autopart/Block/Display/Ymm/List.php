<?php
/**
 * Created by PhpStorm.
 * User: ocastro
 * Date: 3/21/17
 * Time: 10:32 PM
 */

class Homebase_Autopart_Block_Display_Ymm_List extends Mage_Catalog_Block_Product_Abstract{
    protected $_helper;

    protected $_defaultToolbarBlock = 'hautopart/display_list_toolbar';

    protected $_productCollection;

    public function _construct()
    {
        parent::_construct(); // TODO: Change the autogenerated stub
        $this->_helper = Mage::helper('hautopart');
    }

    protected function _prepareLayout()
    {
        /** @var Mage_Page_Block_Html_Breadcrumbs $breadcrumbs */
        $breadcrumbs = $this->getLayout()->getBlock('breadcrumbs');

        if($breadcrumbs){
            $breadcrumbs->addCrumb('home', array(
                'label' => $this->__('Home'),
                'title' => $this->__('Go to Home Page'),
                'link'  => Mage::getBaseUrl()
            ));

            $params = $this->_helper->getYmmQuery();
            foreach($params as $ndx => $param){
                $link = '';
                if($ndx == 0){
                    //year link
                    $link = $this->_helper->getYearPath($param);
                }else if($ndx == 1){
                    $link = $this->_helper->getMakePath($param);
                }
                $breadcrumbs->addCrumb('param' . $ndx, array(
                    'label'  => strtoupper($param),
                    'title' => ucfirst($param),
                    'link'  => $link
                ));
            }
        }
        return parent::_prepareLayout(); // TODO: Change the autogenerated stub
    }

    protected function _getProductList(){
        if($this->getRequest()->getParam('query')){
            $query = unserialize($this->getRequest()->getParam('query'));
            $year = $query[0];
            $make = $query[1];
            $model = $query[2];


        }else{
            $year = $this->getRequest()->getParam('year');
            $make = $this->getRequest()->getParam('make');
            $model = $this->getRequest()->getParam('model');
        }


        /** @var Homebase_Autopart_Model_Resource_Mix_Collection $_mixes */
        $_mixes = Mage::getModel('hautopart/mix')->getCollection();
        $_mixes->addFieldToFilter('year',$year);
        $_mixes->addFieldToFilter('make',$make);
        $_mixes->addFieldToFilter('model',$model);
        $_mixes->getSelect()->group('product_id');
        $pIds = $_mixes->getColumnValues('product_id');
        if(!empty($pIds)){
            if(is_null($this->_productCollection)){
                $layer = $this->getLayer();
                $product_collection = Mage::getModel('catalog/product')->getCollection()
                    ->addAttributeToSelect(Mage::getSingleton('catalog/config')->getProductAttributes())
                    ->addAttributeToFilter('type_id',array('eq' => Homebase_Autopart_Model_Product_Type_Autopart::CUSTOM_PRODUCT_TYPE_ID))
                    ->addUrlRewrite()
                    ->addFieldToFilter('entity_id',array('in' => $pIds));
                $this->_productCollection = $product_collection;
                $this->prepareSortableFieldsByCategory($layer->getCurrentCategory());
            }
        }
        return $this->_productCollection;
    }
    public function getLoadedProductCollection()
    {
        return $this->_getProductList();
    }
    protected function _beforeToHtml()
    {
        $toolbar = $this->getToolbarBlock();

        $collection = $this->getLoadedProductCollection();

        // use sortable parameters
        if ($orders = $this->getAvailableOrders()) {
            $toolbar->setAvailableOrders($orders);
        }
        if ($sort = $this->getSortBy()) {
            $toolbar->setDefaultOrder($sort);
        }
        if ($dir = $this->getDefaultDirection()) {
            $toolbar->setDefaultDirection($dir);
        }
        if ($modes = $this->getModes()) {
            $toolbar->setModes($modes);
        }

        $toolbar->setCollection($collection);




        $this->setChild('toolbar',$toolbar);

        return parent::_beforeToHtml(); // TODO: Change the autogenerated stub
    }

    public function getToolbarHtml()
    {
        return $this->getChildHtml('toolbar');
    }

    public function getToolbarBlock()
    {
        if ($blockName = $this->getToolbarBlockName()) {
            if ($block = $this->getLayout()->getBlock($blockName)) {
                return $block;
            }
        }
        $block = $this->getLayout()->createBlock($this->_defaultToolbarBlock, microtime());
        return $block;
    }

    public function getMode()
    {
        return $this->getChild('toolbar')->getCurrentMode();
    }

    public function getLayer()
    {
        $layer = Mage::registry('current_layer');
        if ($layer) {
            return $layer;
        }
        return Mage::getSingleton('catalog/layer');
    }

    public function prepareSortableFieldsByCategory($category) {
        if (!$this->getAvailableOrders()) {
            $this->setAvailableOrders($category->getAvailableSortByOptions());
        }
        $availableOrders = $this->getAvailableOrders();
        if (!$this->getSortBy()) {
            if ($categorySortBy = $category->getDefaultSortBy()) {
                if (!$availableOrders) {
                    $availableOrders = $this->_getConfig()->getAttributeUsedForSortByArray();
                }
                if (isset($availableOrders[$categorySortBy])) {
                    $this->setSortBy($categorySortBy);
                }
            }
        }

        return $this;
    }

}